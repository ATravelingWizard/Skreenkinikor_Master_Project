<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnRefresh.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>